#!/bin/sh
# preinst script for statefs

set -e

# summary of how this script can be called:
#        * <postinst> configure' <most-recently-configured-version>
#        * <old-postinst> abort-upgrade' <new version>
#        * <conflictor's-postinst> abort-remove' in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> abort-deconfigure' in-favour'
#          <failed-install-package> <version> removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the postinst' is called with abort-upgrade',
#     abort-remove' or abort-deconfigure'.

statefs_umask=$(umask)
statefs_group=privileged

case "$1" in
    configure)

	if ! getent group | grep -q "^$statefs_group:" ; then
          echo -n "Adding group $statefs_group.."
          addgroup --quiet --system $statefs_group 2>/dev/null ||true
          echo "..done"
	fi

        STATEFS_GID=$(grep "^${statefs_group}:" /etc/group | cut -d ':' -f 3 | tr -d '\n')
	if [ "x${STATEFS_GID}" = "x" ]; then
	   echo "WARNING: there is no ${statefs_group} group, failed"
	   exit 0
	fi

	SYS_ENV_FILE=/etc/statefs/system.conf
	SES_ENV_FILE=/etc/statefs/session.conf
	update_var() {
	    DST=$1
	    sed -i -e "s/$2/$3/" $DST
	    if ! grep "$2" $DST; then
		echo "$3" >> $DST
	    fi
	}
	update_env() {
	    DST=$1
	    touch $DST
	    update_var $DST 'STATEFS_GID=.*$' "STATEFS_GID=$STATEFS_GID"
	    update_var $DST 'STATEFS_UMASK=.*$' "STATEFS_UMASK=${statefs_umask}"
	}
	test -d /etc/statefs || mkdir -p /etc/statefs
	update_env $SYS_ENV_FILE
	update_env $SES_ENV_FILE

	/usr/lib/statefs/loader-do register default || :
	if [ $1 -eq 1 ]; then
	    systemctl daemon-reload || :
	    systemctl-user daemon-reload || :
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
        echo $1
    ;;
       
    *)
        echo "postinst called with unknown argument \$1'" >&2
        exit 1
    ;;
esac
	           
# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

